(()=>{"use strict";const t={RU:"Russia",DK:"Denmark",NL:"Netherlands",NO:"Norway",ES:"Spain",IT:"Italy",GR:"Greece",GB:"United Kingdom",IE:"Ireland",TH:"Thailand",PL:"Polska",US:"United States",IS:"Iceland",DE:"Germany",KZ:"Kazakhstan",FR:"France",MX:"Mexico",BE:"Belgium",SE:"Sweden",CL:"Chile",CY:"Cyprus",BR:"Brazil",AU:"Australia",CA:"Canada",UK:"Ukraine",AR:"Argentina",PT:"Portugal",LU:"Luxembourg",SI:"Slovenia",LT:"Lithuania",JP:"Japan",AE:"United Arab Emirates",RO:"Romania",TR:"Turkey",AT:"Austria",FI:"Finland",IL:"Israel",SK:"Slovakia",CO:"Colombia",GE:"Georgia",CH:"Switzerland",ME:"Montenegro",NZ:"New Zealand",LV:"Latvia",BG:"Bulgaria",HR:"Croatia",SA:"Saudi Arabia",UA:"Ukraine",MT:"Malta",BA:"Bosnia and Herzegovina",AW:"Aruba",IN:"India",EE:"Estonia",LB:"Lebanon",KW:"Kuwait",HU:"Hungary"};function e(t){return t<10?`0${t}`:t}function n(){return new Promise(((t,e)=>{navigator.geolocation.getCurrentPosition((e=>t([e.coords.latitude,e.coords.longitude])),(()=>e(!1)))}))}const o=class{static toggleMap(){document.querySelector(".map__container").classList.toggle("active")}static displayStartPage(e,n){const o=document.querySelector(".main"),a=document.querySelector(".start");document.querySelector("#year").innerText=`${(new Date).getFullYear()}`,o.classList.remove("active"),a.classList.add("active"),this.displayCountryList(n.country),t[n.country]&&this.displayCityList(e[n.country],n.city)}static displayMainPage(e){const n=document.querySelector(".start"),o=document.querySelector(".main"),a=document.querySelector(".location"),s=document.querySelector(".stations");document.querySelector(".loader").classList.add("active"),n.classList.remove("active"),o.classList.add("active"),s.innerHTML="",a.innerText=`${e.city}, ${t[e.country]}`}static displayCountryList(e){const n=document.querySelector("#country");n.innerHTML='<option value="">Select country</option>',Object.entries(t).forEach((t=>{const o=e===t[0];n.innerHTML+=`\n        <option ${o?"selected":""} value="${t[0]}">${t[1]}</option>\n      `}))}static displayCityList(t,e){const n=document.querySelector("#city");n.innerHTML='<option value="">Select city</option>',Object.keys(t).forEach((t=>{const o=e===t;n.innerHTML+=`\n        <option ${o?"selected":""} value="${t}">${t}</option>\n      `}))}static getStationsList(t){let e="";return t.forEach((t=>{const n=null===t.free_bikes?"":`<p>Free bikes <span>${t.free_bikes}</span></p>`,o=null===t.empty_slots?"":`<p>Empty slots <span>${t.empty_slots}</span></p>`;e+=`\n        <li class="stations__item" data-id="${t.id}">\n          <h2>${t.name}</h2>\n          ${n}\n          ${o}\n        </li>\n      `})),e}static displayNetworks(t){const n=document.querySelector(".stations");document.querySelector(".loader").classList.remove("active"),n.innerHTML="",0===t.reduce(((t,e)=>t+e.stations.length),0)&&(n.innerHTML+='\n        <header class="stations__header">\n          <p class="empty">No results</p>\n        </header>\n      '),t.forEach((t=>{t.stations.length>0&&(n.innerHTML+=`\n          <header class="stations__header">\n            <p>${function(t){if(""===t)return"";const n=new Date,o=new Date(t),a=`${e(o.getHours())}:${e(o.getMinutes())}`;return n.getDate()===o.getDate()&&n.getMonth()===o.getMonth()&&n.getFullYear()===o.getFullYear()?`Today, ${a}`:`${o.getDate()}.${o.getMonth()+1}.${o.getFullYear()}, ${a}`}(t.timestamp)}</p>\n            <h1>${t.name}</h1>\n            <p>${t.stations.length} results</p>\n          </header>\n          <ul class="stations__list">\n            ${this.getStationsList(t.stations)}\n          </ul>\n        `)}))}},a=class{static getData(){const t=localStorage.getItem("find_bike_app");return null===t?{country:"",city:"",coords:[],networks:[],stationId:""}:JSON.parse(t)}static setData(t){const e=this.getData();localStorage.setItem("find_bike_app",JSON.stringify({...e,...t}))}static clearData(){localStorage.clear()}};document.addEventListener("DOMContentLoaded",(()=>{const t=document.querySelector("#location-form"),e=document.querySelector("#search-form"),s=document.querySelector("#search-input"),r=document.querySelector("#country"),i=document.querySelector("#change-location"),c=document.querySelector("#open-map"),l=document.querySelector("#close-map"),u=document.querySelector("#my-position"),d=document.querySelector("#zoom-in"),m=document.querySelector("#zoom-out"),p=document.querySelector(".stations"),h=document.querySelector(".scroll__button");let y,g={},v=[];function k(t){const e=document.querySelector(".stations__item.active"),n=document.querySelector(`.stations__item[data-id="${t}"]`);e&&e.classList.remove("active"),n&&(n.classList.add("active"),n.scrollIntoView({behavior:"smooth",block:"center"})),a.setData({stationId:t}),y.activeMarker(t)}async function S(t){0===Object.keys(g).length&&(g=await new Promise(((t,e)=>{fetch("https://api.citybik.es/v2/networks").then((t=>t.json())).then((e=>t(function(t){const e={};return t.networks.forEach((t=>{const{location:n,id:o,href:a,name:s}=t,{city:r,country:i,latitude:c,longitude:l}=n;e[i]?e[i][r]?e[i][r].networks.push({id:o,href:a,name:s}):e[i][r]={coords:[c,l],networks:[{id:o,href:a,name:s}]}:e[i]={[r]:{coords:[c,l],networks:[{id:o,href:a,name:s}]}}})),e}(e)))).catch((t=>e(t)))}))),o.displayStartPage(g,t)}async function w(t){var e;o.displayMainPage(t),s.value="",e=t.coords,y?y.setView(e):y=new class{constructor(t){this.markers={},this.zoom={min:0,max:20,curr:16},this.map=L.map("map",{zoomControl:!1}),L.tileLayer("https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png",{attribution:'<span class="map__footer">&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors</span>',maxZoom:18,minZoom:2}).addTo(this.map),this.setView(t)}setView(t){this.map.setView(t,16),this.zoom.curr=16}createMarkers(t,e){t.forEach((t=>{t.stations.forEach((t=>{const n=this.createMarker(t,e);this.markers[t.id]=n,n.addTo(this.map)}))}))}createMarker(t,e){const n=L.icon({iconUrl:"/image/blue_pin_30x40.png",iconSize:[30,40],iconAnchor:[15,40],popupAnchor:[0,-40]}),o=null===t.free_bikes?"":`Free bikes <span>${t.free_bikes}</span></br>`,a=null===t.empty_slots?"":`Empty slots <span>${t.empty_slots}</span></br>`,s=L.marker(t.coords,{icon:n});return s.bindTooltip(t.name),s.bindPopup(`\n        <p class="popup">\n          <span class="title">${t.name}</span><br/>\n          ${o}\n          ${a}\n        </p>\n    `),s.addEventListener("click",(()=>e(t.id))),s}activeMarker(t){Object.keys(this.markers).length>0&&(this.map.flyTo(this.markers[t].getLatLng(),16),this.markers[t].openPopup(),this.zoom.curr=16)}myPosition(t){this.markers.user&&this.markers.user.remove(this.map);const e=L.icon({iconUrl:"/image/pin_30x40.png",iconSize:[30,40],iconAnchor:[15,40],popupAnchor:[0,-40]}),n=L.marker(t,{icon:e});n.bindTooltip("My position"),n.bindPopup('<p class="popup"><span>My position</span></p>'),n.addTo(this.map),this.markers.user=n,this.map.flyTo(n.getLatLng(),17),n.openPopup(),this.zoom.curr=17}zoomIn(){this.zoom.curr=Math.min(this.zoom.max,this.zoom.curr+1),this.map.setZoom(this.zoom.curr)}zoomOut(){this.zoom.curr=Math.max(this.zoom.min,this.zoom.curr-1),this.map.setZoom(this.zoom.curr)}clear(){Object.values(this.markers).forEach((t=>t.remove(this.map))),this.markers={}}}(e),v=await function(t,e){const o=t.map((t=>t.id));return Promise.all(o.map((t=>fetch(`https://api.citybik.es/v2/networks/${t}`).then((t=>t.json()))))).then((async t=>{const o=function(t){return[...t].map((t=>({name:t.network.name,timestamp:t?.network?.stations[0]?.timestamp||0,stations:t.network.stations.map((t=>({empty_slots:t.empty_slots,free_bikes:t.free_bikes,name:t.name,id:t.id,coords:[t.latitude,t.longitude]})))}))).sort(((t,e)=>e.stations.length-t.stations.length))}(t);return await async function(t,e){let o=[...t];return await n().then((t=>{o=o.map((n=>{const o=n.stations.sort(((n,o)=>e.distance(t,n.coords)-e.distance(t,o.coords)));return{...n,stations:o}}))})),o}(o,e)}))}(t.networks,y.map),y.createMarkers(v,k),o.displayNetworks(v),""!==t.stationId&&k(t.stationId)}window.addEventListener("scroll",(()=>{const t=window.pageYOffset,e=h.classList.contains("active");t>180&&!e?h.classList.add("active"):t<=180&&e&&h.classList.remove("active")})),h.addEventListener("click",(()=>window.scrollTo({top:0,behavior:"smooth"}))),i.addEventListener("click",(()=>S(a.getData()))),r.addEventListener("change",(t=>S({city:"",country:t.target.value}))),t.addEventListener("submit",(t=>{t.preventDefault();const{city:e,country:n}=t.target.elements;if(""===e.value||""===n.value)return void window.alert("You must select city and country");const o=g[n.value][e.value],s={country:n.value,city:e.value,coords:o.coords,networks:o.networks,stationId:""};y&&y.clear(),a.setData(s),w(s)})),e.addEventListener("submit",(t=>t.preventDefault())),s.addEventListener("input",(t=>{if(""===t.target.value)o.displayNetworks(v);else{const e=function(t,e){const n=e.toLowerCase().normalize();return[...t].map((t=>{const e=t.stations.filter((t=>t.name.toLowerCase().normalize().indexOf(n)>=0));return{...t,stations:e}}))}(v,t.target.value);o.displayNetworks(e)}})),p.addEventListener("click",(t=>{if(!t.target.classList.contains("stations__item"))return;const e=t.target.getAttribute("data-id");window.innerWidth<992&&o.toggleMap(),k(e)})),c.addEventListener("click",o.toggleMap),l.addEventListener("click",o.toggleMap),d.addEventListener("click",(()=>{y&&y.zoomIn()})),m.addEventListener("click",(()=>{y&&y.zoomOut()})),u.addEventListener("click",(()=>{n().then((t=>y.myPosition(t))).catch((()=>window.alert("We can't get your location")))})),"serviceWorker"in navigator&&window.addEventListener("load",(()=>{navigator.serviceWorker.register("./serviceWorker.js").then((t=>console.log("Service Worker: Registered"))).catch((t=>console.log("Service Worker: Error")))})),function(){const t=a.getData();""===t.city?S({country:-1===navigator.language.indexOf("-")?navigator.language.toUpperCase():navigator.language.split("-")[0].toUpperCase(),city:""}):w(t)}()}))})();