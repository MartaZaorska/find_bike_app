(()=>{"use strict";const t={RU:"Russia",DK:"Denmark",NL:"Netherlands",NO:"Norway",ES:"Spain",IT:"Italy",GR:"Greece",GB:"United Kingdom",IE:"Ireland",TH:"Thailand",PL:"Polska",US:"United States",IS:"Iceland",DE:"Germany",KZ:"Kazakhstan",FR:"France",MX:"Mexico",BE:"Belgium",SE:"Sweden",CL:"Chile",CY:"Cyprus",BR:"Brazil",AU:"Australia",CA:"Canada",UK:"Ukraine",AR:"Argentina",PT:"Portugal",LU:"Luxembourg",SI:"Slovenia",LT:"Lithuania",JP:"Japan",AE:"United Arab Emirates",RO:"Romania",TR:"Turkey",AT:"Austria",FI:"Finland",IL:"Israel",SK:"Slovakia",CO:"Colombia",GE:"Georgia",CH:"Switzerland",ME:"Montenegro",NZ:"New Zealand",LV:"Latvia",BG:"Bulgaria",HR:"Croatia",SA:"Saudi Arabia",UA:"Ukraine",MT:"Malta",BA:"Bosnia and Herzegovina",AW:"Aruba",IN:"India",EE:"Estonia",LB:"Lebanon",KW:"Kuwait",HU:"Hungary"};function e(t){return t<10?`0${t}`:t}function a(){return new Promise(((t,e)=>{navigator.geolocation.getCurrentPosition((e=>t([e.coords.latitude,e.coords.longitude])),(()=>e(!1)))}))}const n=class{static toggleMap(){document.querySelector(".map__container").classList.toggle("active")}static displayStartPage(e,a){const n=document.querySelector(".main"),o=document.querySelector(".start");document.querySelector("#year").innerText=`${(new Date).getFullYear()}`,n.classList.remove("active"),o.classList.add("active"),this.displayCountryList(a.country),t[a.country]&&this.displayCityList(e[a.country],a.city)}static displayMainPage(e){const a=document.querySelector(".start"),n=document.querySelector(".main"),o=document.querySelector(".location"),s=document.querySelector(".stations");document.querySelector(".loader").classList.add("active"),a.classList.remove("active"),n.classList.add("active"),s.innerHTML="",o.innerText=`${e.city}, ${t[e.country]}`}static displayCountryList(e){const a=document.querySelector("#country");a.innerHTML='<option value="">Select country</option>',Object.entries(t).forEach((t=>{const n=e===t[0];a.innerHTML+=`\n        <option ${n?"selected":""} value="${t[0]}">${t[1]}</option>\n      `}))}static displayCityList(t,e){const a=document.querySelector("#city");a.innerHTML='<option value="">Select city</option>',Object.keys(t).forEach((t=>{const n=e===t;a.innerHTML+=`\n        <option ${n?"selected":""} value="${t}">${t}</option>\n      `}))}static getStationsList(t){let e="";return t.forEach((t=>{const a=null===t.free_bikes?"":`<p>Free bikes <span>${t.free_bikes}</span></p>`,n=null===t.empty_slots?"":`<p>Empty slots <span>${t.empty_slots}</span></p>`;e+=`\n        <li class="stations__item" data-id="${t.id}">\n          <h2>${t.name}</h2>\n          ${a}\n          ${n}\n        </li>\n      `})),e}static displayNetworks(t){const a=document.querySelector(".stations");document.querySelector(".loader").classList.remove("active"),a.innerHTML="",0===t.reduce(((t,e)=>t+e.stations.length),0)&&(a.innerHTML+='\n        <header class="stations__header">\n          <p class="empty">No results</p>\n        </header>\n      '),t.forEach((t=>{t.stations.length>0&&(a.innerHTML+=`\n          <header class="stations__header">\n            <p>${function(t){if(""===t)return"";const a=new Date,n=new Date(t),o=`${e(n.getHours())}:${e(n.getMinutes())}`;return a.getDate()===n.getDate()&&a.getMonth()===n.getMonth()&&a.getFullYear()===n.getFullYear()?`Today, ${o}`:`${n.getDate()}.${n.getMonth()+1}.${n.getFullYear()}, ${o}`}(t.timestamp)}</p>\n            <h1>${t.name}</h1>\n            <p>${t.stations.length} results</p>\n          </header>\n          <ul class="stations__list">\n            ${this.getStationsList(t.stations)}\n          </ul>\n        `)}))}},o=class{static getData(){const t=localStorage.getItem("find_bike_app");return null===t?{country:"",city:"",coords:[],networks:[],stationId:""}:JSON.parse(t)}static setData(t){const e=this.getData();localStorage.setItem("find_bike_app",JSON.stringify({...e,...t}))}static clearData(){localStorage.clear()}};document.addEventListener("DOMContentLoaded",(()=>{const t=document.querySelector("#location-form"),e=document.querySelector("#search-form"),s=document.querySelector("#search-input"),r=document.querySelector("#country"),i=document.querySelector("#change-location"),c=document.querySelector("#open-map"),l=document.querySelector("#close-map"),u=document.querySelector("#my-position"),d=document.querySelector("#zoom-in"),m=document.querySelector("#zoom-out"),p=document.querySelector(".stations"),y=document.querySelector(".scroll__button");let h,g={},v=[];function k(t){const e=document.querySelector(".stations__item.active"),a=document.querySelector(`.stations__item[data-id="${t}"]`);e&&e.classList.remove("active"),a&&(a.classList.add("active"),a.scrollIntoView({behavior:"smooth",block:"center"})),o.setData({stationId:t}),h.activeMarker(t)}async function w(t){0===Object.keys(g).length&&(g=await new Promise(((t,e)=>{fetch("https://api.citybik.es/v2/networks").then((t=>t.json())).then((e=>t(function(t){const e={};return t.networks.forEach((t=>{const{location:a,id:n,href:o,name:s}=t,{city:r,country:i,latitude:c,longitude:l}=a;e[i]?e[i][r]?e[i][r].networks.push({id:n,href:o,name:s}):e[i][r]={coords:[c,l],networks:[{id:n,href:o,name:s}]}:e[i]={[r]:{coords:[c,l],networks:[{id:n,href:o,name:s}]}}})),e}(e)))).catch((t=>e(t)))}))),n.displayStartPage(g,t)}async function S(t){var e;n.displayMainPage(t),s.value="",e=t.coords,h?h.setView(e):h=new class{constructor(t){this.markers={},this.zoom={min:0,max:20,curr:16},this.map=L.map("map",{zoomControl:!1}),L.tileLayer("https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png",{attribution:'<span class="map__footer">&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors</span>',maxZoom:18,minZoom:2}).addTo(this.map),this.setView(t)}setView(t){this.map.setView(t,16),this.zoom.curr=16}createMarkers(t,e){t.forEach((t=>{t.stations.forEach((t=>{const a=this.createMarker(t,e);this.markers[t.id]=a,a.addTo(this.map)}))}))}createMarker(t,e){const a=null===t.free_bikes?"":`Free bikes <span>${t.free_bikes}</span></br>`,n=null===t.empty_slots?"":`Empty slots <span>${t.empty_slots}</span></br>`,o=L.marker(t.coords);return o.bindTooltip(t.name),o.bindPopup(`\n        <p class="popup">\n          <span class="title">${t.name}</span><br/>\n          ${a}\n          ${n}\n        </p>\n    `),o.addEventListener("click",(()=>e(t.id))),o}activeMarker(t){Object.keys(this.markers).length>0&&(this.map.flyTo(this.markers[t].getLatLng(),16),this.markers[t].openPopup(),this.zoom.curr=16)}myPosition(t){this.markers.user&&this.markers.user.remove(this.map);const e=L.marker(t);e.bindTooltip("My position"),e.bindPopup('<p class="popup"><span>My position</span></p>'),e.addTo(this.map),this.markers.user=e,this.map.flyTo(e.getLatLng(),17),e.openPopup(),this.zoom.curr=17}zoomIn(){this.zoom.curr=Math.min(this.zoom.max,this.zoom.curr+1),this.map.setZoom(this.zoom.curr)}zoomOut(){this.zoom.curr=Math.max(this.zoom.min,this.zoom.curr-1),this.map.setZoom(this.zoom.curr)}clear(){Object.values(this.markers).forEach((t=>t.remove(this.map))),this.markers={}}}(e),v=await function(t,e){const n=t.map((t=>t.id));return Promise.all(n.map((t=>fetch(`https://api.citybik.es/v2/networks/${t}`).then((t=>t.json()))))).then((async t=>{const n=function(t){return[...t].map((t=>({name:t.network.name,timestamp:t?.network?.stations[0]?.timestamp||0,stations:t.network.stations.map((t=>({empty_slots:t.empty_slots,free_bikes:t.free_bikes,name:t.name,id:t.id,coords:[t.latitude,t.longitude]})))}))).sort(((t,e)=>e.stations.length-t.stations.length))}(t);return await async function(t,e){let n=[...t];return await a().then((t=>{n=n.map((a=>{const n=a.stations.sort(((a,n)=>e.distance(t,a.coords)-e.distance(t,n.coords)));return{...a,stations:n}}))})),n}(n,e)}))}(t.networks,h.map),h.createMarkers(v,k),n.displayNetworks(v),""!==t.stationId&&k(t.stationId)}window.addEventListener("scroll",(()=>{const t=window.pageYOffset,e=y.classList.contains("active");t>180&&!e?y.classList.add("active"):t<=180&&e&&y.classList.remove("active")})),y.addEventListener("click",(()=>window.scrollTo({top:0,behavior:"smooth"}))),i.addEventListener("click",(()=>w(o.getData()))),r.addEventListener("change",(t=>w({city:"",country:t.target.value}))),t.addEventListener("submit",(t=>{t.preventDefault();const{city:e,country:a}=t.target.elements;if(""===e.value||""===a.value)return void window.alert("You must select city and country");const n=g[a.value][e.value],s={country:a.value,city:e.value,coords:n.coords,networks:n.networks,stationId:""};h&&h.clear(),o.setData(s),S(s)})),e.addEventListener("submit",(t=>t.preventDefault())),s.addEventListener("input",(t=>{if(""===t.target.value)n.displayNetworks(v);else{const e=function(t,e){const a=e.toLowerCase().normalize();return[...t].map((t=>{const e=t.stations.filter((t=>t.name.toLowerCase().normalize().indexOf(a)>=0));return{...t,stations:e}}))}(v,t.target.value);n.displayNetworks(e)}})),p.addEventListener("click",(t=>{if(!t.target.classList.contains("stations__item"))return;const e=t.target.getAttribute("data-id");window.innerWidth<992&&n.toggleMap(),k(e)})),c.addEventListener("click",n.toggleMap),l.addEventListener("click",n.toggleMap),d.addEventListener("click",(()=>{h&&h.zoomIn()})),m.addEventListener("click",(()=>{h&&h.zoomOut()})),u.addEventListener("click",(()=>{a().then((t=>h.myPosition(t))).catch((()=>window.alert("We can't get your location")))})),"serviceWorker"in navigator&&window.addEventListener("load",(()=>{navigator.serviceWorker.register("./serviceWorker.js").then((t=>console.log("Service Worker: Registered"))).catch((t=>console.log("Service Worker: Error")))})),function(){const t=o.getData();""===t.city?w({country:-1===navigator.language.indexOf("-")?navigator.language.toUpperCase():navigator.language.split("-")[0].toUpperCase(),city:""}):S(t)}()}))})();